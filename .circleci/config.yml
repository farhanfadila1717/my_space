version: 2.1
jobs:
  flutter_ui_tests:
    macos:
       xcode: 12.5.1
    resource_class: Large
    working_directory: ~/my-flutter-project
    steps:
      - checkout:
          path: ~/my-flutter-project
      - run:
          name: Setup environment variables
          command: echo 'export PATH="$PATH:`pwd`/flutter/bin"'  >> $BASH_ENV
      - run:
          name: Download flutter SDK
          command: if ! test -f "flutter_windows_2.2.3-stable.zip"; then curl -o flutter_sdk.zip https://storage.googleapis.com/flutter_infra_release/releases/stable/windows/flutter_windows_2.2.3-stable.zip; fi
      - run:
          name: Unzip flutter SDK
          command: unzip flutter_windows_2.2.3-stable.zip
      - save_cache:
          key: flutter_cache_1
          paths:
            - flutter_windows_2.2.3-stable.zip.zip
      - run:
          name: Setup environment variables
          command: |
            echo 'export PATH="$PATH:/usr/local/opt/node@8/bin:${HOME}/.yarn/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin:/usr/local/share/android-sdk/emulator:/usr/local/share/android-sdk/tools:/usr/local/share/android-sdk/tools/bin:/usr/local/share/android-sdk/platform-tools"' >> $BASH_ENV
            echo 'export ANDROID_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            java -version
            echo $JAVA_HOME
            echo 'export ANDROID_SDK_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export QEMU_AUDIO_DRV=none' >> $BASH_ENV
      - run:
          name: Install Android sdk
          command: |
            export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
      - run:
          name: Install emulator dependencies
          command: |
            export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"
            (yes | sdkmanager "platform-tools" "platforms;android-29" "system-images;android-29;google_apis;x86" "emulator" --verbose) || true
      - run:
          name: Setup Emulator
          command: |
            pwd
            echo no | avdmanager create avd --name "test" --force --package "system-images;android-29;google_apis;x86" --tag google_apis --abi "x86"
      - run:
          name: Launch Emulator
          command: |
            emulator -avd "test" -skin 768x1280 -no-audio -no-window
          background: true
      - run:
          name: Wait for emulator
          command: |
            local bootanim=""
            echo "Giving some time to boot up the emulator"
            sleep 30
            echo "Checking emulator status"
            until [[ "$bootanim" =~ "stopped" ]]; do
              sleep 5
              bootanim=$(/usr/local/share/android-sdk/platform-tools/adb -e shell getprop init.svc.bootanim 2>&1)
              echo "boot animation status=$bootanim"
            done
            echo "Android Virtual Device is ready."
            adb shell input keyevent 82
      - run:
          name: Run Flutter Integration Tests
          command: |
            flutter drive --driver=integration_test/driver.dart --target=integration_test/app_test.dart
          no_output_timeout: 20m
      - store_artifacts:
          path: output
      - store_test_results:
          path: output/scan
workflows:
  distribute:
    jobs:
      - flutter_ui_tests